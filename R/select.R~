# R.E. Benestad
# Function that searches the meta data base for the requested station data
# Search priority: ID, name, coordinates, altitude, country,...
# Can return several matches 

select <- function(stid=NULL,param=NULL,lon=NULL,lat=NULL,alt=NULL,cntr=NULL,
                    ...) UseMethod("select")

select.default <- function() {
}


# Selects a station time series based on station number or location (stid) or on the basis
# of location or altitude. Returns a pointer to selected objects in the meta-data list. Need to use
# this list to determine source.

select.station <- function(stid=NULL,param=NULL,lon=NULL,lat=NULL,
                           alt=NULL,cntr=NULL,
                           src=NULL) {
  load("esd/data/station.meta.rda")

  n <- length(station.meta$stid)
  STID <- station.meta$stid

  # For several data sets, the element is set to 'NA' - do not exclude these in the search

  if (!is.null(param)) {
    ele.c<-switch(tolower(param),
                't2m'='101','tg'='101','rr'='601','slp'='401','cloud'='801',
                't2'='101','precip'='601','101'='101','401'='401',
                '601'='601','801'='801')
    station.meta$element[is.na(station.meta$element)] <- ele.c
    is <- is.element(station.meta$element,ele.c)
  } else is <- rep(TRUE,n)
  
  if (!is.null(stid)) {
    if (is.numeric(stid)) {
      iselect <- is.element(station.meta$stid,stid) & is
      return(iselect)
    } else if (is.character(stid)) {
      nc <- nchar(stid)
      iselect <- rep(FALSE,length(station.meta$location))
      for (ii in 1:length(stid)) 
        iselect <- iselect |
           is.element(tolower(substr(station.meta$location,1,nc[ii])),tolower(stid[ii])) & is
      return(iselect)
    }
  }
  if (!is.null(lon) & !is.null(lat)) {
    if ( (length(lon)==1) & (length(lat)==1) ) {
      # Closest station:
      d <- distAB(lon,lat,station.meta$lon,station.meta$lat)
      iselect <- is.element(d,min(d)) & is
      return(iselect)
    } else if ( (length(lon)==2) & (length(lat)==2) ) {
      iselect <- (lon[1] <= station.meta$lon) & (lon[2] >= station.meta$lon) &
                 (lat[1] <= station.meta$lon) & (lat[2] >= station.meta$lon) &
                 is
      return(iselect)
    } else return(NULL)
  } 
  if (!is.null(alt)) {
    if (length(alt)==1) {
      if (alt < 0) iselect <- (station.meta$alt <= alt) & is else
      if (alt > 0) iselect <- (station.meta$alt >= alt) & is
      return(iselect)
    } else if (length(alt)==2) {
      select <- (alt[1] <= station.meta$alt) & (alt[2] >= station.meta$alt) & is
      return(iselect)
    }
  }
  if (!is.null(cntr)) {
    
    iselect <- is.element(tolower(station.meta$country),tolower(cntr)) & is
    return(iselect)
  }
  if (!is.null(param)) {
    iselect <- is
    return(iselect)
  }

  if (!is.null(src)) {
    iselect <- is.element(station.meta$src,src) & is
    return(iselect)
  }
  return(is)
}

